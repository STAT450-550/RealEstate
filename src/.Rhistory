print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
# all municipalities
municipality.list = c(
"Burnaby",
"Coquitlam",
"Delta",
"Langley - City",
"Langley - Township",
"Maple Ridge",
"Maple Ridge Rural",
"North Vancouver - City",
"North Vancouver - Dist",
"Pitt Meadows",
"Port Coquitlam",
"Port Moody",
"Richmond",
"Surrey",
"Vancouver",
"White Rock",
"West Vancouver",
"Bowen Island",
"Anmore",
"Belcarra",
"Lions Bay")
# budget and assessment data import and process
tax_pct<-read_csv(here("data", "tax_pct.csv"))
assessment_pct<-read_csv(here("data", "assessment_pct.csv"))
# omit 2016
assessment_pct<-na.omit(assessment_pct)
assessment_pct<-assessment_pct[,-c(1)]
names(assessment_pct)[2]<-paste("Municipalities")
tax_pct<-tax_pct[,-c(1)]
#head(tax_pct)
assessment_aggregate <- read.csv(here("data","assessment_aggregate.csv"))
tax_pct[,4]<-(tax_pct$pct_2017+tax_pct$pct_2018)/2
#tax_pct
names(tax_pct)[4]<-paste("pct_2019")
tax_pct<-rbind(tax_pct,c("Maple Ridge Rural", 6.195736, 5.6949567,5.945346))
#head(tax_pct)
assessment2017<-assessment_pct  %>%  filter(Year=="2017")
tax2017<-tax_pct[,1:2]
assessment2017<-assessment2017 %>% left_join(tax2017, by = c("Municipalities"))
names(assessment2017)[9]<-paste("tax")
assessment2018<-assessment_pct  %>%  filter(Year=="2018")
tax2018<-tax_pct[,c(1,3)]
assessment2018<-assessment2018 %>% left_join(tax2018, by = c("Municipalities"))
names(assessment2018)[9]<-paste("tax")
assessment2019<-assessment_pct  %>%  filter(Year=="2019")
tax2019<-tax_pct[,c(1,4)]
assessment2019<-assessment2019 %>% left_join(tax2019, by = c("Municipalities"))
names(assessment2019)[9]<-paste("tax")
pct_final<-assessment2017 %>% full_join(assessment2018) %>% full_join(assessment2019)
write.csv(pct_final, here("data","data_final.csv"))
# all pct data aggregated
#head(pct_final)
tax_final <- read.csv(here("data","tax_final.csv"))
#head(tax_final)
# tax_final is the budget
tax_modified <- tax_final  %>% mutate(X2019=tax_final$X2018*(1+(((tax_final$X2017-tax_final$X2016)/tax_final$X2016 + (tax_final$X2018-tax_final$X2017)/tax_final$X2017)/2)))
# tax_modified contains all the budget values from 2016 to 2019
#head(tax_modified)
# all pct aggregated
pct_final
# all budget values
tax_modified
# get predicted tax income for all tax classes and each municipality
assessment_aggregate[,10] <- assessment_aggregate$assessTotal*assessment_aggregate$rate/100
names(assessment_aggregate)[10] <- paste("predTaxIncome")
dat_pred_income <- assessment_aggregate %>% select(Year,AddressAssessorMunicipalityDesc,TaxClassCode,predTaxIncome)
dat_pred_income <- aggregate(dat_pred_income$predTaxIncome,by=list(Year=dat_pred_income$Year,Municipalities=dat_pred_income$AddressAssessorMunicipalityDesc),FUN=sum)
names(dat_pred_income)[3] <- paste("predTaxIncome")
head(dat_pred_income)
# mill rate vesus year for each municipality and tax class
dat_rate <- assessment_aggregate %>% select(Year, AddressAssessorMunicipalityDesc, TaxClassCode, rate)
#head(dat_rate)
dat_rate_1 <- dat_rate %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list) %>% filter(TaxClassCode=="1")
dat_rate_5 <- dat_rate %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list) %>% filter(TaxClassCode=="5")
dat_rate_6 <- dat_rate %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list) %>% filter(TaxClassCode=="6")
# plot assessed value vesus year for each municipality and tax class
dat_assess <- assessment_aggregate %>% select(Year, AddressAssessorMunicipalityDesc, TaxClassCode, assessTotal)
dat_assess_1 <- dat_assess %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list) %>% filter(TaxClassCode=="1")
dat_assess_5 <- dat_assess %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list) %>% filter(TaxClassCode=="5")
dat_assess_6 <- dat_assess %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list) %>% filter(TaxClassCode=="6")
# plot budgets vesus year
dat_tax_long <- gather(tax_modified, Year, TaxAmount, X2016:X2019, factor_key=TRUE)
# Vancouver/West Vancouver are special cases for assessment, we omit them for taxClass 1 and 6
rate_class1 <- dat_rate_1 %>% filter(AddressAssessorMunicipalityDesc != "Vancouver" & AddressAssessorMunicipalityDesc != "West Vancouver") %>% ggplot(aes(x=Year,y=rate,group=AddressAssessorMunicipalityDesc,color=AddressAssessorMunicipalityDesc)) + geom_point() + ggtitle("mill rate for taxClass 1 and all municipalities") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
assess_class1 <- dat_assess_1 %>% filter(AddressAssessorMunicipalityDesc != "Vancouver" & AddressAssessorMunicipalityDesc != "West Vancouver") %>% ggplot(aes(x=Year,y=assessTotal,group=AddressAssessorMunicipalityDesc,color=AddressAssessorMunicipalityDesc)) + geom_point() + ggtitle("assessTotal for taxClass 1 and all municipalities") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
multiplot(rate_class1 + theme(legend.position = "none"), assess_class1 + theme(legend.position = "none"))
rate_class5 <- dat_rate_5 %>% ggplot(aes(x=Year,y=rate,group=AddressAssessorMunicipalityDesc,color=AddressAssessorMunicipalityDesc)) + geom_point() + ggtitle("mill rate for taxClass 5") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
assess_class5 <- dat_assess_5 %>% ggplot(aes(x=Year,y=assessTotal,group=AddressAssessorMunicipalityDesc,color=AddressAssessorMunicipalityDesc)) + geom_point() + ggtitle("assessTotal for taxClass 5") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
multiplot(rate_class5 + theme(legend.position = "none"),assess_class5 + theme(legend.position = "none"))
rate_class6 <- dat_rate_6 %>% filter(AddressAssessorMunicipalityDesc != "Vancouver" & AddressAssessorMunicipalityDesc != "West Vancouver") %>% ggplot(aes(x=Year,y=rate,group=AddressAssessorMunicipalityDesc,color=AddressAssessorMunicipalityDesc)) + geom_point() + ggtitle("mill rate for taxClass 6 and all municipalities") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
assess_class6 <- dat_assess_6 %>% filter(AddressAssessorMunicipalityDesc != "Vancouver" & AddressAssessorMunicipalityDesc != "West Vancouver") %>% ggplot(aes(x=Year,y=assessTotal,group=AddressAssessorMunicipalityDesc,color=AddressAssessorMunicipalityDesc)) + geom_point() + ggtitle("assessTotal for taxClass 6 and all municipalities") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
multiplot(rate_class6 + theme(legend.position = "none"),assess_class6 + theme(legend.position = "none"))
budget_plot <- dat_tax_long %>% filter(Municipalities != "Vancouver" & Municipalities != "West Vancouver") %>% ggplot(aes(x=Year,y=TaxAmount,group=Municipalities,color=Municipalities)) + geom_point() + ggtitle("Tax v.s Year") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
budget_plot
pct_rate1 <- pct_final %>%
filter(Municipalities %in% municipality.list) %>%
filter(TaxClassCode == "01") %>%
ggplot(aes(x=Year, y=rate_pct, group=Municipalities, color=Municipalities)) +
geom_point() + ggtitle("taxClass1 pct rate v.s year") + theme(legend.position = "none") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
pct_rate5 <- pct_final %>%
filter(Municipalities %in% municipality.list) %>%
filter(TaxClassCode == "05") %>%
ggplot(aes(x=Year, y=rate_pct, group=Municipalities, color=Municipalities)) +
geom_point() + ggtitle("taxClass5 pct rate v.s year") + theme(legend.position = "none") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
pct_rate6 <- pct_final %>%
filter(Municipalities %in% municipality.list) %>%
filter(TaxClassCode == "06") %>%
ggplot(aes(x=Year, y=rate_pct, group=Municipalities, color=Municipalities)) +
geom_point() + ggtitle("taxClass6 pct rate v.s year") + theme(legend.position = "none") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
pct_assess1 <- pct_final %>%
filter(Municipalities %in% municipality.list) %>%
filter(TaxClassCode == "01") %>%
ggplot(aes(x=Year, y=assessTotal_pct, group=Municipalities, color=Municipalities)) +
geom_point() + ggtitle("taxClass1 pct assessment v.s year") + theme(legend.position = "none") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
pct_assess5 <- pct_final %>%
filter(Municipalities %in% municipality.list) %>%
filter(TaxClassCode == "05") %>%
ggplot(aes(x=Year, y=assessTotal_pct, group=Municipalities, color=Municipalities)) +
geom_point() + ggtitle("taxClass5 pct assessment v.s year") + theme(legend.position = "none") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
pct_assess6 <- pct_final %>%
filter(Municipalities %in% municipality.list) %>%
filter(TaxClassCode == "06") %>%
ggplot(aes(x=Year, y=assessTotal_pct, group=Municipalities, color=Municipalities)) +
geom_point() + ggtitle("taxClass6 pct assessment v.s year") + theme(legend.position = "none") + geom_smooth(aes(group = 1), size = 0.5, method = "lm", se = FALSE, colour = "black")
multiplot(pct_rate1,pct_assess1)
multiplot(pct_rate5,pct_assess5)
multiplot(pct_rate6,pct_assess6)
# for each municipality
tax.list <- c("01","05","06")
for (i in 1:21){
if (municipality.list[i] != "Lions Bay") {
plot_rate_pct <- pct_final %>% filter(Municipalities == municipality.list[i]) %>%
filter(TaxClassCode %in% tax.list) %>%
ggplot(aes(x=Year, y=rate_pct, group=TaxClassCode, color=TaxClassCode)) +
geom_line() + ggtitle(municipality.list[i])
plot_assess_pct <- pct_final %>% filter(Municipalities == municipality.list[i]) %>%
filter(TaxClassCode %in% tax.list) %>%
ggplot(aes(x=Year, y=assessTotal_pct, group=TaxClassCode, color=TaxClassCode)) +
geom_line() + ggtitle(municipality.list[i])
plot_tax_pct <- pct_final %>% filter(Municipalities == municipality.list[i]) %>%
filter(TaxClassCode %in% tax.list) %>%
ggplot(aes(x=Year, y=tax, group=TaxClassCode, color=TaxClassCode)) +
geom_line() + ggtitle(municipality.list[i])
multiplot(plot_rate_pct,plot_assess_pct,plot_tax_pct)
}
}
rate_boxes <- ggplot(dat_rate, aes(x=AddressAssessorMunicipalityDesc,y=rate,fill=TaxClassCode)) + geom_boxplot() + facet_wrap(~TaxClassCode) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none")
rate_boxes
# aggregate tax and mill rate & assessment
colnames(tax_modified) <- c("X","Municipalities","2016","2017","2018","2019")
dat_tax_long <- gather(tax_modified, Year, TaxAmount, "2016":"2019", factor_key=TRUE)
tax_modified1 <- gather(tax_modified, Year, tax, '2016':'2019', factor_key = TRUE)%>%
rename(AddressAssessorMunicipalityDesc = Municipalities)
assessment_aggregate <- merge(assessment_aggregate, tax_modified1, by = c("AddressAssessorMunicipalityDesc","Year"))
assessment_aggregate <- assessment_aggregate[,-c(3,11)]
names(assessment_aggregate)[10] <- paste("tax")
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
# all white noise
for (i in 1:21) {
print(municipality.list[i])
dat_tmp <- dat_rate %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list[i] & TaxClassCode %in% "1") %>% select(rate)
if (municipality.list[i] != "Maple Ridge Rural") {
as.ts(dat_tmp)
acf(dat_tmp)
}
}
for (i in 1:21) {
print(municipality.list[i])
dat_tmp <- dat_rate %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list[i] & TaxClassCode %in% "5") %>% select(rate)
if (municipality.list[i] != "Maple Ridge Rural" & municipality.list[i] != "White Rock" & municipality.list[i] != "Anmore" & municipality.list[i] != "Belcarra" & municipality.list[i] != "Lions Bay") {
as.ts(dat_tmp)
acf(dat_tmp)
}
}
for (i in 1:21) {
print(municipality.list[i])
dat_tmp <- dat_rate %>% filter(AddressAssessorMunicipalityDesc %in% municipality.list[i] & TaxClassCode %in% "6") %>% select(rate)
if (municipality.list[i] != "Maple Ridge Rural") {
as.ts(dat_tmp)
acf(dat_tmp)
}
}
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final)
summary(linear1)
linear2<-lm(rate_pct~factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final)
summary(linear2)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final)
summary(linear1)
g <- gam(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final,family=gaussian)
library(gam)
library(gam)
g <- gam(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final,family=gaussian)
g
summary(g)
summary(g)$r.sq
summary(g)
g <- gam(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+s(assessTotal_pct)+s(tax),data=pct_final,family=gaussian)
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
#group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# rate_tax_correlation
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
AddressAssessorMunicipalityDesc,
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
library(aov)
library(ANOVA)
npk.aov <- aov(AddressAssessorMunicipalityDesc ~ tax, assessment_aggregate)
npk.aov <- aov(rate ~ AddressAssessorMunicipalityDesc, assessment_aggregate)
aov <- aov(rate ~ AddressAssessorMunicipalityDesc, assessment_aggregate)
summary(aov)
aov <- aov(rate ~ TaxClassCode, assessment_aggregate)
aov <- aov(rate ~ TaxClassCode, assessment_aggregate)
summary(aov)
# correlation between mill rate and budget for each municipality
rate_tax_correlation <- assessment_aggregate %>%
group_by(TaxClassCode)%>%
summarise(cor(rate, tax))
rate_tax_correlation
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(AddressAssessorMunicipalityDesc,TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
# correlation between mill rate and assessment
rate_assess_correlation2 <- assessment_aggregate %>%
group_by(TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
View(assessment_aggregate)
aov <- aov(rate ~ Year, assessment_aggregate)
summary(aov)
x <- assessment_aggregat%>%
filter(AddressAssessorMunicipalityDesc =="Vancouver")
x <- assessment_aggregate%>%
filter(AddressAssessorMunicipalityDesc =="Vancouver")
aov <- aov(rate ~ AddressAssessorMunicipalityDesc, x)
x <- assessment_aggregate%>%
filter(AddressAssessorMunicipalityDesc !="Vancouver")
aov <- aov(rate ~ AddressAssessorMunicipalityDesc, x)
summary(aov)
# correlation between mill rate and assessment
rate_assess_correlation2 <- x %>%
group_by(TaxClassCode)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
# correlation between mill rate and assessment
rate_assess_correlation2 <- a %>%
group_by(AddressAssessorMunicipalityDesc)%>%
summarise(cor(assessTotal, rate))
# correlation between mill rate and assessment
rate_assess_correlation2 <- x %>%
group_by(AddressAssessorMunicipalityDesc)%>%
summarise(cor(assessTotal, rate))
rate_assess_correlation2
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode),data=pct_final)
summary(linear1)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities),data=pct_final)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities),data=pct_final)
summary(linear1)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final)
summary(linear1)
str(assessment_aggregate)
linear1<-lm(rate_pct~.,data=pct_final)
summary(linear1)
pct_final
pct_final1 <- pct_final%>%
filter(TaxClassCode = "01")
pct_final1 <- pct_final%>%
filter(TaxClassCode == "01")
linear1<-lm(rate_pct~.,data=pct_final1)
pct_final1
linear1<-lm(rate_pct~.,data=pct_final1)
linear1<-lm(rate_pct~.,data=pct_final1)
linear1<-lm(rate_pct~.,data=pct_final)
linear1<-lm(rate_pct~.,data=pct_final1)
View(pct_final1)
linear1<-lm(rate_pct~.,data=pct_final)
pct_final1
View(pct_final)
pct_final
pct_final
str(pct_final)
pct_final$Year = as.factor(pct_final$Year)
pct_final$Year = as.factor(pct_final$Year)
pct_final$Year = as.factor(pct_final$Year)
pct_final$Municipalities = as.factor(pct_final$Municipalities)
pct_final$TaxClassCode = as.factor(pct_final$TaxClassCode)
pct_final$tax = as.factor(pct_final$tax)
pct_final1 <- pct_final%>%
filter(TaxClassCode == "01")
linear1<-lm(rate_pct~.,data=pct_final1)
pct_final1
linear1<-lm(rate_pct~.,data=pct_final1)
pct_final1
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+s(assessTotal_pct)+tax,data=pct_final)
summary(linear1)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+s(assessTotal_pct)+tax,data=pct_final1)
linear1<-lm(rate_pct~factor(Year)+factor(TaxClassCode)+factor(Municipalities)+assessTotal_pct+tax,data=pct_final1)
linear1
pct_final1
pct_final1
linear1<-lm(rate_pct~assessTotal_pct,data=pct_final1)
str(pct_final1)
pct_final1 <- pct_final%>%
filter(TaxClassCode == "01")%>%
select(-TaxClassCode)
str(pct_final1)
linear1<-lm(rate_pct ~ ., data=pct_final1)
summary(linear1)
linear1<-lm(rate_pct ~ ., data=pct_final1)
summary(linear1)
pct_final1
linear1<-lm(rate_pct ~ ., data=pct_final1)
summary(linear1)
str(pct_final1)
pct_final$Year = as.factor(pct_final$Year)
pct_final$Year = as.factor(pct_final$Year)
pct_final$Municipalities = as.factor(pct_final$Municipalities)
pct_final$Municipalities = as.factor(pct_final$Municipalities)
pct_final$tax = as.numeric(pct_final$tax)
pct_final1 <- pct_final%>%
filter(TaxClassCode == "01")%>%
select(-TaxClassCode)
linear1<-lm(rate_pct ~ ., data=pct_final1)
summary(linear1)
pct_final2 <- pct_final%>%
filter(TaxClassCode == "05")%>%
select(-TaxClassCode)
pct_final3 <- pct_final%>%
filter(TaxClassCode == "06")%>%
select(-TaxClassCode)
linear2<-lm(rate_pct ~ ., data=pct_final2)
linear3<-lm(rate_pct ~ ., data=pct_final3)
summary(linear1)
summary(linear2)
summary(linear3)
summary(linear2)
summary(linear3)
summary(linear1)
summary(linear2)
summary(linear3)
linear2<-lm(rate_pct ~ assessTotal_pct*tax ., data=pct_final2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax, data=pct_final2)
linear2.1<-lm(rate_pct ~ assessTotal_pct+tax ., data=pct_final2)
linear2.1<-lm(rate_pct ~ assessTotal_pct+tax, data=pct_final2)
summary(linear2)
summary(linear2.1)
str(linear2)
str(pct_final2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax+Year+Municipalities, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax*landTotal_pct*improvementTotal_pct*propertyCount_pct+Year+Municipalities+, data=pct_final2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax*landTotal_pct*improvementTotal_pct*propertyCount_pct+Year+Municipalities, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax*landTotal_pct*improvementTotal_pct+Year+Municipalities, data=pct_final2)
linear2
summary(linear2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax*landTotal_pct+Year+Municipalities, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax+Year+Municipalities, data=pct_final2)
summary(linear2)
linear3<-lm(rate_pct ~ assessTotal_pct*tax, data=pct_final3)
summary(linear3)
linear3<-lm(rate_pct ~ ., data=pct_final3)
summary(linear3)
linear2<-lm(rate_pct ~ assessTotal_pct*tax+Year+Municipalities, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax+Year, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ assessTotal_pct*tax, data=pct_final2)
summary(linear2)
linear2.1<-lm(rate_pct ~ assessTotal_pct+tax, data=pct_final2)
summary(linear2.1)
linear2<-lm(rate_pct ~ ., data=pct_final2)
linear2<-lm(rate_pct ~ ., data=pct_final2)
summary(linear2)
str(pct_final2)
(pct_final2%>%
summarise(cor(assessTotal, rate)))
(pct_final2%>%
summarise(cor(assessTotal_pct, rate_pct)))
(pct_final2%>%
summarise(cor(propertyCount_pct, rate_pct)))
(pct_final2%>%
summarise(cor(tax, rate_pct)))
linear2<-lm(rate_pct ~ Year+ Municipalities, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ Year*Municipalities, data=pct_final2)
summary(linear2)
linear2<-lm(rate_pct ~ Year+Municipalities, data=pct_final2)
summary(linear2)
linear3<-lm(rate_pct ~ ., data=pct_final3)
pct_final2 <- pct_final%>%
filter(TaxClassCode != "01")%>%
select(-TaxClassCode)
linear2<-lm(rate_pct ~ Year+Municipalities, data=pct_final2)
linear2<-lm(rate_pct ~ ., data=pct_final2)
summary(linear2)
View(linear2)
View(pct_final2)
pct_final2 <- pct_final%>%
filter(TaxClassCode != "01")
linear2<-lm(rate_pct ~ ., data=pct_final2)
summary(linear2)
summary(linear1)
library(neuralnet)
install.packages(neuralnet)
install.packages("neuralnet")
library(neuralnet)
assessment_final <- read.csv("~/Desktop/assessment_final.csv")
View(assessment_final)
str(assessment_final)
assessment_final[,-x]
assessment_final[,-X]
assessment_final-X]
assessment_final[-X]
View(assessment_final)
assessment_final <- assessment_final%>%
select(-X)
str(assessment_final)
nn <- neuralnet(TaxClassTaxRate ~ ., data=TaxClassTaxRate)
nn <- neuralnet(TaxClassTaxRate ~ ., data=assessment_final)
pct_final2 <- pct_final%>%
filter(TaxClassCode != "01")
pct_final3 <- pct_final%>%
filter(TaxClassCode == "06")
